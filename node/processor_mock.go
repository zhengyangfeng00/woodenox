// Code generated by MockGen. DO NOT EDIT.
// Source: processor.go

// Package node is a generated GoMock package.
package node

import (
	gomock "github.com/golang/mock/gomock"
	iterator "github.com/zhengyangfeng00/woodenox/iterator"
	reflect "reflect"
)

// MockProcessor is a mock of Processor interface
type MockProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockProcessorMockRecorder
}

// MockProcessorMockRecorder is the mock recorder for MockProcessor
type MockProcessorMockRecorder struct {
	mock *MockProcessor
}

// NewMockProcessor creates a new mock instance
func NewMockProcessor(ctrl *gomock.Controller) *MockProcessor {
	mock := &MockProcessor{ctrl: ctrl}
	mock.recorder = &MockProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProcessor) EXPECT() *MockProcessorMockRecorder {
	return m.recorder
}

// ProcessItem mocks base method
func (m *MockProcessor) ProcessItem(stream string, item iterator.Item) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessItem", stream, item)
}

// ProcessItem indicates an expected call of ProcessItem
func (mr *MockProcessorMockRecorder) ProcessItem(stream, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessItem", reflect.TypeOf((*MockProcessor)(nil).ProcessItem), stream, item)
}

// MockProcessorUtils is a mock of ProcessorUtils interface
type MockProcessorUtils struct {
	ctrl     *gomock.Controller
	recorder *MockProcessorUtilsMockRecorder
}

// MockProcessorUtilsMockRecorder is the mock recorder for MockProcessorUtils
type MockProcessorUtilsMockRecorder struct {
	mock *MockProcessorUtils
}

// NewMockProcessorUtils creates a new mock instance
func NewMockProcessorUtils(ctrl *gomock.Controller) *MockProcessorUtils {
	mock := &MockProcessorUtils{ctrl: ctrl}
	mock.recorder = &MockProcessorUtilsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProcessorUtils) EXPECT() *MockProcessorUtilsMockRecorder {
	return m.recorder
}

// ProduceItem mocks base method
func (m *MockProcessorUtils) ProduceItem(stream string, item iterator.Item) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProduceItem", stream, item)
}

// ProduceItem indicates an expected call of ProduceItem
func (mr *MockProcessorUtilsMockRecorder) ProduceItem(stream, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProduceItem", reflect.TypeOf((*MockProcessorUtils)(nil).ProduceItem), stream, item)
}
